name: Unit Test Coverage

on:
  pull_request:
    branches:
      - develop

jobs:
  test_coverage:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.6'

      - name: Install dependencies
        run: flutter pub get

      - name: Install lcov
        run: sudo apt-get install -y lcov

      - name: Run unit tests with coverage
        run: |
          flutter test --coverage
          echo "Checking if coverage file exists:"
          ls -la coverage/

      - name: Generate coverage report
        run: genhtml coverage/lcov.info -o coverage/html

      # Check coverage threshold and continue even if threshold fails
      - name: Check coverage threshold
        id: check_coverage
        run: |
          # Debug: Output the lcov summary
          lcov --summary coverage/lcov.info
          # Extract the percentage coverage from the 'lines......' row in the lcov summary
          COVERAGE=$(lcov --summary coverage/lcov.info | grep -Po 'lines\.*: \K\d+.\d+')
          echo "Extracted Coverage: $COVERAGE%"
          echo "coverage=$COVERAGE" >> $GITHUB_ENV
          if (( $(echo "$COVERAGE < 80" | bc -l) )); then
            echo "Code coverage is below the required threshold of 80%!"
            exit 1
          else
            echo "Code coverage is above the required threshold."
          fi
        continue-on-error: true

      # Push the generated coverage report to the gh-pages branch
      - name: Deploy coverage report to GitHub Pages
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

          # Check out the gh-pages branch
          git checkout --orphan gh-pages
          git reset
          git clean -fd

          # Copy the generated HTML coverage report
          cp -r coverage/html/* .

          # Add, commit, and push the changes
          git add .
          git commit -m "Update coverage report"
          git push --force "https://${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git" gh-pages

      # Post the coverage results in the PR
      - name: Post comment with coverage results
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: Coverage Report
          message: |
            Current code coverage is at ${{ env.coverage }}%.
            View the detailed [coverage report](https://${{ github.repository_owner }}.github.io/${{ github.repository_name }}/index.html).
      # Final step to fail the job if the coverage threshold check failed
      - name: Fail if coverage below threshold
        if: steps.check_coverage.outcome == 'failure'
        run: exit 1
