name: Unit Test Coverage

on:
  pull_request:
    branches:
      - develop

jobs:
  test_coverage:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.6'

      - name: Install dependencies
        run: flutter pub get

      # Install lcov package to get genhtml
      - name: Install lcov
        run: sudo apt-get install -y lcov

      - name: Run unit tests with coverage
        run: flutter test --coverage

      - name: Generate coverage report
        run: genhtml coverage/lcov.info -o coverage/html

      # Check coverage threshold and continue even if threshold fails
      - name: Check coverage threshold
        id: check_coverage
        run: |
          COVERAGE=$(lcov --summary coverage/lcov.info | grep 'lines' | awk '{print $4}' | sed 's/%//')
          echo "Coverage is at $COVERAGE%"
          echo "coverage=$COVERAGE" >> $GITHUB_ENV
          if (( $(echo "$COVERAGE < 80" | bc -l) )); then
            echo "Code coverage is below the required threshold of 80%!"
            exit 1  # Continue with other steps, but mark this one as failed
        continue-on-error: true  # Ensure the workflow continues even if the coverage check fails

      # Upload the HTML coverage report, even if the coverage check failed
      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage/html
          retention-days: 7  # Keep the artifact for 7 days

      # Post a link to the PR comment with the coverage results and report link
      - name: Post comment with coverage results
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: Coverage Report
          message: |
            Current code coverage is at ${{ env.coverage }}%.
            View the detailed [HTML coverage report](${{ steps.upload_coverage.outputs.artifact_url }}).

      # Final step to fail the job if the coverage is below the threshold
      - name: Fail if coverage below threshold
        if: steps.check_coverage.outcome == 'failure'
        run: exit 1
