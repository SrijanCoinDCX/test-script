name: Code Quality Checks

on:
  pull_request:
    branches:
      - develop
      - release

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      git-config-setup: ${{ steps.git-config-setup.outputs.result }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Fetch all branches
        run: git fetch --all

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.6'

      - name: Configure Git User
        id: git-config-setup
        run: |
          git config --global user.email "github-actions@users.noreply.github.com"
          git config --global user.name "GitHub Actions"
        continue-on-error: true

  format_check:
    name: Dart Format Check
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.6'

      - name: Install dependencies
        run: flutter pub get

      - name: Dart Format Check
        run: |
          echo "Checking dart format..."
          if ! dart format --set-exit-if-changed .; then
            echo "Code is not properly formatted. Running dart format."
            dart format -o write .
            git add .
            git commit -m "Auto-format code for PR" || echo "No formatting changes to commit."
          else
            echo "All files are properly formatted."
          fi

  dart_fix:
    name: Dart Fix
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.6'

      - name: Install dependencies
        run: flutter pub get

      - name: Dart Fix
        run: |
          echo "Running dart fix..."
          dart fix --apply
          git add .
          git commit -m "Auto-applied dart fixes" || echo "No fixes applied."

  flutter_analyze:
    name: Flutter Analyze
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.6'

      - name: Install dependencies
        run: flutter pub get

      - name: Flutter Analyze
        run: |
          echo "Running flutter analyze..."
          flutter analyze
        continue-on-error: true

  dart_code_metrics:
    name: Dart Code Metrics
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.6'

      - name: Install dependencies
        run: flutter pub get

      - name: Run Dart Code Metrics
        run: |
          echo "Running Dart Code Metrics..."
          dart pub global activate dart_code_metrics
          dart pub global run dart_code_metrics:metrics analyze lib --reporter=console
        continue-on-error: true

  code_architecture:
    name: Check Code Architecture
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.6'

      - name: Install dependencies
        run: flutter pub get

      - name: Check Code Architecture
        run: |
          echo "Checking architecture rules..."
          dart run tools/pr_code_architecture.dart
        env:
          GITHUB_BASE_REF: ${{ github.event.pull_request.base.ref }}
          GITHUB_HEAD_REF: ${{ github.event.pull_request.head.ref }}
        continue-on-error: true

  unit_tests:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.6'

      - name: Install dependencies
        run: flutter pub get

      - name: Run Unit Tests
        run: |
          echo "Running unit tests..."
          flutter test
        continue-on-error: true

  check_todo:
    name: Check For TODO Comments
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Fetch base branch
        run: git fetch origin ${{ github.base_ref }}

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.6'

      - name: Install dependencies
        run: flutter pub get

      - name: Check for TODO Comments in Changed Dart Files
        run: |
          echo "Checking for TODO comments in changed Dart files..."

          git fetch origin ${{ github.base_ref }} ${{ github.head_ref }}

          CHANGED_DART_FILES=$(git diff --name-only --diff-filter=AMR origin/${{ github.base_ref }}...origin/${{ github.head_ref }} -- | grep -E '\.dart$')

          if [ -z "$CHANGED_DART_FILES" ]; then
            echo "No changed Dart files to check for TODOs."
            exit 0
          fi

          TODO_FILES=""

          for file in $CHANGED_DART_FILES; do
            if grep -q "TODO" "$file"; then
              TODO_FILES="$TODO_FILES\n$file"
            fi
          done

          if [ -n "$TODO_FILES" ]; then
            echo "TODO comments found in the following Dart files:"
            echo -e "$TODO_FILES"
            exit 1
          else
            echo "No TODO comments found in changed Dart files."
          fi
